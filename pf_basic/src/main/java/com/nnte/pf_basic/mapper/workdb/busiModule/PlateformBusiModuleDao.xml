<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModuleDao">
    <resultMap id="PlateformBusiModuleResult" type="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModule">
        <result column="id" property="id"/>
        <result column="module_code" property="moduleCode"/>
        <result column="module_name" property="moduleName"/>
        <result column="module_desc" property="moduleDesc"/>
        <result column="current_version" property="currentVersion"/>
        <result column="module_status" property="moduleStatus"/>
        <result column="create_by" property="createBy"/>
        <result column="create_date" property="createDate"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_date" property="updateDate"/>
    </resultMap>
    <insert id="addModel" keyProperty="id" useGeneratedKeys="true" parameterType="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModule">
        insert into plateform_busi_module (module_code ,module_name ,module_desc ,current_version ,module_status ,create_by ,create_date ,update_by ,update_date )
        values (#{moduleCode} ,#{moduleName} ,#{moduleDesc} ,#{currentVersion} ,#{moduleStatus} ,#{createBy} ,#{createDate} ,#{updateBy} ,#{updateDate} )
    </insert>
    <select id="findModelByKey" resultMap="PlateformBusiModuleResult" parameterType="java.lang.Integer">
        select * from plateform_busi_module where id=#{id}
    </select>
    <delete id="deleteModel" parameterType="java.lang.Integer">
        delete from plateform_busi_module where id=#{id}
    </delete>
    <update id="updateModel" parameterType="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModule">
        update plateform_busi_module
        <set>
            <trim suffixOverrides=",">
        <if test="moduleCode!= null"><![CDATA[module_code=#{moduleCode},]]></if>
        <if test="moduleName!= null"><![CDATA[module_name=#{moduleName},]]></if>
        <if test="moduleDesc!= null"><![CDATA[module_desc=#{moduleDesc},]]></if>
        <if test="currentVersion!= null"><![CDATA[current_version=#{currentVersion},]]></if>
        <if test="moduleStatus!= null"><![CDATA[module_status=#{moduleStatus},]]></if>
        <if test="createBy!= null"><![CDATA[create_by=#{createBy},]]></if>
        <if test="createDate!= null"><![CDATA[create_date=#{createDate},]]></if>
        <if test="updateBy!= null"><![CDATA[update_by=#{updateBy},]]></if>
        <if test="updateDate!= null"><![CDATA[update_date=#{updateDate},]]></if>
            </trim>
        </set>
        where id=#{id}
    </update>
    <sql id="appendWheres">
        <if test="appendWhereList!=null">
            <foreach collection="appendWhereList" item="item">
                <if test="item!=null and item.whereType=='direct'">
                    <![CDATA[ and ${item.whereTxt}]]>
                </if>
                <if test="item!=null and item.whereType=='like'">
                    <![CDATA[ and ${item.colName} like '%${item.whereVal}%']]>
                </if>
            </foreach>
        </if>
    </sql>
    <sql id="wheres">
        <where>
                <if test="id!= null"><![CDATA[and t.id = #{id}]]></if>
                <if test="moduleCode!= null"><![CDATA[and t.module_code = #{moduleCode}]]></if>
                <if test="moduleName!= null"><![CDATA[and t.module_name = #{moduleName}]]></if>
                <if test="moduleDesc!= null"><![CDATA[and t.module_desc = #{moduleDesc}]]></if>
                <if test="currentVersion!= null"><![CDATA[and t.current_version = #{currentVersion}]]></if>
                <if test="moduleStatus!= null"><![CDATA[and t.module_status = #{moduleStatus}]]></if>
                <if test="createBy!= null"><![CDATA[and t.create_by = #{createBy}]]></if>
                <if test="createDate!= null"><![CDATA[and t.create_date = #{createDate}]]></if>
                <if test="updateBy!= null"><![CDATA[and t.update_by = #{updateBy}]]></if>
                <if test="updateDate!= null"><![CDATA[and t.update_date = #{updateDate}]]></if>
            <include refid="appendWheres" />
        </where>
    </sql>
    <sql id="findPlateformBusiModuleListSql">
        select * from plateform_busi_module t
        <include refid="wheres" />
        <if test="sort!=null">order by t.${sort} ${dir}</if>
    </sql>
    <select id="findModelList" parameterType="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModule" resultMap="PlateformBusiModuleResult">
        <include refid="findPlateformBusiModuleListSql"/>
    </select>
    <select id="findModelCount"  parameterType="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModule" resultType="java.lang.Integer">
        SELECT count(1) PG_TOTALCOUNT FROM (
        <include refid="findPlateformBusiModuleListSql" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
        ) m
    </select>
    <select id="findModelWithPg" parameterType="com.nnte.pf_basic.mapper.workdb.busiModule.PlateformBusiModule" resultMap="PlateformBusiModuleResult">
        <include refid="findPlateformBusiModuleListSql" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
    </select>
    <select id="findModelListByMap" parameterType="Map" resultMap="PlateformBusiModuleResult">
        select * from plateform_busi_module t
        <include refid="wheres" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
        <if test="sort!=null">order by t.${sort} ${dir}</if>
    </select>
    <select id="findModelListByIds" parameterType="java.util.List" resultMap="PlateformBusiModuleResult">
        select * from plateform_busi_module
        where id in (
        <foreach collection="list" item="item" separator="," >
            (<trim suffixOverrides=",">
                #{item},
            </trim>)</foreach>)
    </select>
</mapper>
