<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctionsDao">
    <resultMap id="PlateformFunctionsResult" type="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctions">
        <result column="id" property="id"/>
        <result column="menu_code" property="menuCode"/>
        <result column="fun_code" property="funCode"/>
        <result column="fun_name" property="funName"/>
        <result column="auth_code" property="authCode"/>
        <result column="fun_param" property="funParam"/>
        <result column="fun_state" property="funState"/>
        <result column="create_time" property="createTime"/>
        <result column="fun_component" property="funComponent"/>
    </resultMap>
    <insert id="addModel" keyProperty="id" useGeneratedKeys="true" parameterType="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctions">
        insert into plateform_functions (menu_code ,fun_code ,fun_name ,auth_code ,fun_param ,fun_state ,create_time ,fun_component )
        values (#{menuCode} ,#{funCode} ,#{funName} ,#{authCode} ,#{funParam} ,#{funState} ,#{createTime} ,#{funComponent} )
    </insert>
    <select id="findModelByKey" resultMap="PlateformFunctionsResult" parameterType="java.lang.Integer">
        select * from plateform_functions where id=#{id}
    </select>
    <delete id="deleteModel" parameterType="java.lang.Integer">
        delete from plateform_functions where id=#{id}
    </delete>
    <update id="updateModel" parameterType="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctions">
        update plateform_functions
        <set>
            <trim suffixOverrides=",">
        <if test="menuCode!= null"><![CDATA[menu_code=#{menuCode},]]></if>
        <if test="funCode!= null"><![CDATA[fun_code=#{funCode},]]></if>
        <if test="funName!= null"><![CDATA[fun_name=#{funName},]]></if>
        <if test="authCode!= null"><![CDATA[auth_code=#{authCode},]]></if>
        <if test="funParam!= null"><![CDATA[fun_param=#{funParam},]]></if>
        <if test="funState!= null"><![CDATA[fun_state=#{funState},]]></if>
        <if test="createTime!= null"><![CDATA[create_time=#{createTime},]]></if>
        <if test="funComponent!= null"><![CDATA[fun_component=#{funComponent},]]></if>
            </trim>
        </set>
        where id=#{id}
    </update>
    <sql id="findPlateformFunctionsListSql">
        select * from plateform_functions t
        <where>
            <if test="id!= null"><![CDATA[and t.id = #{id}]]></if>
            <if test="menuCode!= null"><![CDATA[and t.menu_code = #{menuCode}]]></if>
            <if test="funCode!= null"><![CDATA[and t.fun_code = #{funCode}]]></if>
            <if test="funName!= null"><![CDATA[and t.fun_name = #{funName}]]></if>
            <if test="authCode!= null"><![CDATA[and t.auth_code = #{authCode}]]></if>
            <if test="funParam!= null"><![CDATA[and t.fun_param = #{funParam}]]></if>
            <if test="funState!= null"><![CDATA[and t.fun_state = #{funState}]]></if>
            <if test="createTime!= null"><![CDATA[and t.create_time = #{createTime}]]></if>
            <if test="funComponent!= null"><![CDATA[and t.fun_component = #{funComponent}]]></if>
        </where>
        <if test="sort!=null">order by t.${sort} ${dir}</if>
    </sql>
    <select id="findModelList" parameterType="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctions" resultMap="PlateformFunctionsResult">
        <include refid="findPlateformFunctionsListSql"/>
    </select>
    <select id="findModelCount"  parameterType="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctions" resultType="java.lang.Integer">
        SELECT count(1) PG_TOTALCOUNT FROM (
        <include refid="findPlateformFunctionsListSql" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
        ) m
    </select>
    <select id="findModelWithPg" parameterType="com.nnte.pf_business.mapper.workdb.functions.PlateformFunctions" resultMap="PlateformFunctionsResult">
        <include refid="findPlateformFunctionsListSql" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
    </select>
    <select id="findModelListByIds" parameterType="java.util.List" resultMap="PlateformFunctionsResult">
        select * from plateform_functions
        where id in (
        <foreach collection="list" item="item" separator="," >
            (<trim suffixOverrides=",">
                #{item},
            </trim>)</foreach>)
    </select>
</mapper>
