<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccountDao">
    <resultMap id="PlateformMerchantUtiAccountResult" type="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccount">
        <result column="id" property="id"/>
        <result column="pm_code" property="pmCode"/>
        <result column="account_code" property="accountCode"/>
        <result column="account_pws" property="accountPws"/>
        <result column="sec_type" property="secType"/>
        <result column="interface_version" property="interfaceVersion"/>
        <result column="app_rsa_pubkey" property="appRsaPubkey"/>
        <result column="app_rsa_prikey" property="appRsaPrikey"/>
        <result column="mer_rsa_pubkey" property="merRsaPubkey"/>
        <result column="mer_rsa_prikey" property="merRsaPrikey"/>
        <result column="def_back_url" property="defBackUrl"/>
        <result column="valid_ip_list" property="validIpList"/>
        <result column="back_id" property="backId"/>
        <result column="back_key" property="backKey"/>
        <result column="account_memo" property="accountMemo"/>
        <result column="account_state" property="accountState"/>
        <result column="busi_open_time" property="busiOpenTime"/>
        <result column="busi_expire_time" property="busiExpireTime"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <insert id="addModel" keyProperty="id" useGeneratedKeys="true" parameterType="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccount">
        insert into plateform_merchant_uti_account (pm_code ,account_code ,account_pws ,sec_type ,interface_version ,app_rsa_pubkey ,app_rsa_prikey ,mer_rsa_pubkey ,mer_rsa_prikey ,def_back_url ,valid_ip_list ,back_id ,back_key ,account_memo ,account_state ,busi_open_time ,busi_expire_time ,create_by ,create_time ,update_by ,update_time )
        values (#{pmCode} ,#{accountCode} ,#{accountPws} ,#{secType} ,#{interfaceVersion} ,#{appRsaPubkey} ,#{appRsaPrikey} ,#{merRsaPubkey} ,#{merRsaPrikey} ,#{defBackUrl} ,#{validIpList} ,#{backId} ,#{backKey} ,#{accountMemo} ,#{accountState} ,#{busiOpenTime} ,#{busiExpireTime} ,#{createBy} ,#{createTime} ,#{updateBy} ,#{updateTime} )
    </insert>
    <select id="findModelByKey" resultMap="PlateformMerchantUtiAccountResult" parameterType="java.lang.Integer">
        select * from plateform_merchant_uti_account where id=#{id}
    </select>
    <delete id="deleteModel" parameterType="java.lang.Integer">
        delete from plateform_merchant_uti_account where id=#{id}
    </delete>
    <update id="updateModel" parameterType="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccount">
        update plateform_merchant_uti_account
        <set>
            <trim suffixOverrides=",">
        <if test="pmCode!= null"><![CDATA[pm_code=#{pmCode},]]></if>
        <if test="accountCode!= null"><![CDATA[account_code=#{accountCode},]]></if>
        <if test="accountPws!= null"><![CDATA[account_pws=#{accountPws},]]></if>
        <if test="secType!= null"><![CDATA[sec_type=#{secType},]]></if>
        <if test="interfaceVersion!= null"><![CDATA[interface_version=#{interfaceVersion},]]></if>
        <if test="appRsaPubkey!= null"><![CDATA[app_rsa_pubkey=#{appRsaPubkey},]]></if>
        <if test="appRsaPrikey!= null"><![CDATA[app_rsa_prikey=#{appRsaPrikey},]]></if>
        <if test="merRsaPubkey!= null"><![CDATA[mer_rsa_pubkey=#{merRsaPubkey},]]></if>
        <if test="merRsaPrikey!= null"><![CDATA[mer_rsa_prikey=#{merRsaPrikey},]]></if>
        <if test="defBackUrl!= null"><![CDATA[def_back_url=#{defBackUrl},]]></if>
        <if test="validIpList!= null"><![CDATA[valid_ip_list=#{validIpList},]]></if>
        <if test="backId!= null"><![CDATA[back_id=#{backId},]]></if>
        <if test="backKey!= null"><![CDATA[back_key=#{backKey},]]></if>
        <if test="accountMemo!= null"><![CDATA[account_memo=#{accountMemo},]]></if>
        <if test="accountState!= null"><![CDATA[account_state=#{accountState},]]></if>
        <if test="busiOpenTime!= null"><![CDATA[busi_open_time=#{busiOpenTime},]]></if>
        <if test="busiExpireTime!= null"><![CDATA[busi_expire_time=#{busiExpireTime},]]></if>
        <if test="createBy!= null"><![CDATA[create_by=#{createBy},]]></if>
        <if test="createTime!= null"><![CDATA[create_time=#{createTime},]]></if>
        <if test="updateBy!= null"><![CDATA[update_by=#{updateBy},]]></if>
        <if test="updateTime!= null"><![CDATA[update_time=#{updateTime},]]></if>
            </trim>
        </set>
        where id=#{id}
    </update>
    <sql id="appendWheres">
        <if test="appendWhereList!=null">
            <foreach collection="appendWhereList" item="item">
                <if test="item!=null and item.whereType=='direct'">
                    <![CDATA[ and ${item.whereTxt}]]>
                </if>
                <if test="item!=null and item.whereType=='like'">
                    <![CDATA[ and ${item.colName} like '%${item.whereVal}%']]>
                </if>
            </foreach>
        </if>
    </sql>
    <sql id="wheres">
        <where>
                <if test="id!= null"><![CDATA[and t.id = #{id}]]></if>
                <if test="pmCode!= null"><![CDATA[and t.pm_code = #{pmCode}]]></if>
                <if test="accountCode!= null"><![CDATA[and t.account_code = #{accountCode}]]></if>
                <if test="accountPws!= null"><![CDATA[and t.account_pws = #{accountPws}]]></if>
                <if test="secType!= null"><![CDATA[and t.sec_type = #{secType}]]></if>
                <if test="interfaceVersion!= null"><![CDATA[and t.interface_version = #{interfaceVersion}]]></if>
                <if test="appRsaPubkey!= null"><![CDATA[and t.app_rsa_pubkey = #{appRsaPubkey}]]></if>
                <if test="appRsaPrikey!= null"><![CDATA[and t.app_rsa_prikey = #{appRsaPrikey}]]></if>
                <if test="merRsaPubkey!= null"><![CDATA[and t.mer_rsa_pubkey = #{merRsaPubkey}]]></if>
                <if test="merRsaPrikey!= null"><![CDATA[and t.mer_rsa_prikey = #{merRsaPrikey}]]></if>
                <if test="defBackUrl!= null"><![CDATA[and t.def_back_url = #{defBackUrl}]]></if>
                <if test="validIpList!= null"><![CDATA[and t.valid_ip_list = #{validIpList}]]></if>
                <if test="backId!= null"><![CDATA[and t.back_id = #{backId}]]></if>
                <if test="backKey!= null"><![CDATA[and t.back_key = #{backKey}]]></if>
                <if test="accountMemo!= null"><![CDATA[and t.account_memo = #{accountMemo}]]></if>
                <if test="accountState!= null"><![CDATA[and t.account_state = #{accountState}]]></if>
                <if test="busiOpenTime!= null"><![CDATA[and t.busi_open_time = #{busiOpenTime}]]></if>
                <if test="busiExpireTime!= null"><![CDATA[and t.busi_expire_time = #{busiExpireTime}]]></if>
                <if test="createBy!= null"><![CDATA[and t.create_by = #{createBy}]]></if>
                <if test="createTime!= null"><![CDATA[and t.create_time = #{createTime}]]></if>
                <if test="updateBy!= null"><![CDATA[and t.update_by = #{updateBy}]]></if>
                <if test="updateTime!= null"><![CDATA[and t.update_time = #{updateTime}]]></if>
            <include refid="appendWheres" />
        </where>
    </sql>
    <sql id="findPlateformMerchantUtiAccountListSql">
        select * from plateform_merchant_uti_account t
        <include refid="wheres" />
        <if test="sort!=null">order by t.${sort} ${dir}</if>
    </sql>
    <select id="findModelList" parameterType="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccount" resultMap="PlateformMerchantUtiAccountResult">
        <include refid="findPlateformMerchantUtiAccountListSql"/>
    </select>
    <select id="findModelCount"  parameterType="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccount" resultType="java.lang.Integer">
        SELECT count(1) PG_TOTALCOUNT FROM (
        <include refid="findPlateformMerchantUtiAccountListSql" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
        ) m
    </select>
    <select id="findModelWithPg" parameterType="com.nnte.pf_merchant.mapper.workdb.merchantUtiAccount.PlateformMerchantUtiAccount" resultMap="PlateformMerchantUtiAccountResult">
        <include refid="findPlateformMerchantUtiAccountListSql" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
    </select>
    <select id="findModelListByMap" parameterType="Map" resultMap="PlateformMerchantUtiAccountResult">
        select * from plateform_merchant_uti_account t
        <include refid="wheres" />
        <if test="start!= null">  LIMIT #{limit} OFFSET #{start} </if>
        <if test="sort!=null">order by t.${sort} ${dir}</if>
    </select>
    <select id="findModelListByIds" parameterType="java.util.List" resultMap="PlateformMerchantUtiAccountResult">
        select * from plateform_merchant_uti_account
        where id in (
        <foreach collection="list" item="item" separator="," >
            (<trim suffixOverrides=",">
                #{item},
            </trim>)</foreach>)
    </select>
</mapper>
